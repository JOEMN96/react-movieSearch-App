[{"C:\\Users\\Admin\\Desktop\\movie\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\movie\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\movie\\src\\components\\Navbar.js":"3","C:\\Users\\Admin\\Desktop\\movie\\src\\configs\\Store.js":"4","C:\\Users\\Admin\\Desktop\\movie\\src\\configs\\Reducer.js":"5","C:\\Users\\Admin\\Desktop\\movie\\src\\configs\\Config.js":"6"},{"size":335,"mtime":1607095254100,"results":"7","hashOfConfig":"8"},{"size":496,"mtime":1607094987126,"results":"9","hashOfConfig":"8"},{"size":2309,"mtime":1607098364095,"results":"10","hashOfConfig":"8"},{"size":839,"mtime":1607097582975,"results":"11","hashOfConfig":"8"},{"size":0,"mtime":1607094951352,"results":"12","hashOfConfig":"8"},{"size":35,"mtime":1607094086981,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1660098",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\movie\\src\\index.js",[],["28","29"],"C:\\Users\\Admin\\Desktop\\movie\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\movie\\src\\components\\Navbar.js",["30"],"C:\\Users\\Admin\\Desktop\\movie\\src\\configs\\Store.js",["31"],"import React, { useReducer } from \"react\";\r\n\r\nexport const GlobolContext = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH\":\r\n      return {\r\n        ...state,\r\n        searchVal: action.payload,\r\n        loading: true,\r\n      };\r\n    case \"MOVIELIST\":\r\n      return {\r\n        ...state,\r\n        movieLists: [action.payload],\r\n      };\r\n    case \"LOADINGOFF\":\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n  }\r\n};\r\n\r\nconst initial = {\r\n  searchVal: \"\",\r\n  loading: false,\r\n  movieLists: [],\r\n};\r\n\r\nexport const GlobolContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initial);\r\n\r\n  return (\r\n    <GlobolContext.Provider value={{ state, dispatch }}>\r\n      {props.children}\r\n    </GlobolContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\Admin\\Desktop\\movie\\src\\configs\\Reducer.js",[],"C:\\Users\\Admin\\Desktop\\movie\\src\\configs\\Config.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":9,"column":11,"nodeType":"38","messageId":"39","endLine":9,"endColumn":20},{"ruleId":"40","severity":1,"message":"41","line":6,"column":3,"nodeType":"42","messageId":"43","endLine":23,"endColumn":4},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'movieData' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]